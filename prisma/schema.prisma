datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String  @id @default(cuid())
  email        String? @unique
  firstName    String?
  lastName     String?
  // not enum yet because SQLite connector doesn't support enum
  authProvider String? // @default("EMAIL")
  socialId     String? @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password     Password?
  notes        Note[]
  createdSongs Song[]    @relation(name: "CreatedBy")
  updatedSongs Song[]    @relation(name: "UpdatedBy")
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Song {
  id          String  @id @default(cuid())
  title       String
  artist      String
  songLink    String?
  spotifyLink String?

  danceName             String?
  danceChoreographer    String?
  danceInstructionsLink String?
  stepSheetLink         String?
  danceCounts           Int?
  wallCounts            Int?
  startingWeightFoot    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  createdBy   User   @relation(name: "CreatedBy", fields: [createdById], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdById String

  updatedBy   User   @relation(name: "UpdatedBy", fields: [updatedById], references: [id], onDelete: Cascade, onUpdate: Cascade)
  updatedById String
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}
